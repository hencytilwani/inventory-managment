create table products(productId int primary key,supplierId int,product_name text,desctiption text,price decimal(10,2), QuantityOnHand int,reorderPoint int,category text);
create table supplier (supplierId int primary key,supplier_name varchar(30),contactName varchar(30),contatMail varchar(30),phoneNumber text);
create table customer(customerId int primary key,customerName varchar(30),ContactName varchar(30),contactEmail varchar(30),BillinAddreess varchar(30));
create table orders(orderId int primary key , customerId int,orderDate date,TotalAmount decimal(10,2));
create table OrderDetails(OrderDetailsId int,OrderId int,productId int,Quantity int,unitPrice decimal(10,2),SubTotal decimal(10,2));
create table Transactions(TransactionId int ,TransactionDate date,ProductId int,Quantity int,TransactionType varchar(30));


INSERT INTO Products (productId,supplierId, product_name, desctiption, price, QuantityOnHand, reorderPoint, category)
VALUES
    (101,1, 'Laptop', 'High-performance laptop', 899.99, 20, 5, 'Computers'),
    (102,1, 'Smartphone', 'Latest smartphone model', 599.99, 30, 10, 'Mobile Devices'),
    (103,2, 'Tablet', '10-inch tablet with touchscreen', 299.99, 15, 5, 'Mobile Devices'),
    (104,2, 'Headphones', 'Wireless noise-canceling headphones', 149.99, 40, 15, 'Audio Accessories'),
    (105,3, 'Smart TV', '55-inch 4K UHD Smart TV', 799.99, 10, 3, 'Televisions'),
    (106,3, 'Digital Camera', 'High-resolution digital camera', 499.99, 25, 8, 'Cameras'),
    (107,4, 'Gaming Console', 'Next-gen gaming console', 399.99, 12, 4, 'Gaming');
	select * from products;
	
	
INSERT INTO Supplier (supplierId, supplier_name, contactName, contatMail, phoneNumber)
VALUES
    (1, 'TechElectro Ltd.', 'John Smith', 'john@techelectro.com', '123-456-7890'),
    (2, 'ElectroMasters Inc.', 'Alice Johnson', 'alice@electromasters.com', '987-654-3210'),
    (3, 'GadgetWhiz Corp.', 'Michael Davis', 'michael@gadgetwhizcorp.com', '555-123-4567'),
    (4, 'Digital Universe Suppliers', 'Sarah Brown', 'sarah@digitaluniverse.com', '789-987-6543'),
    (5, 'TechSolutions Group', 'David Wilson', 'david@techsolutionsgroup.com', '321-456-7890'),
    (6, 'ElecTech Innovations', 'Emily White', 'emily@electechinnovations.com', '666-777-8888'),
    (7, 'GizmoTech Enterprises', 'Robert Lee', 'robert@gizmotechent.com', '444-555-6666');
	
select * from Supplier;

INSERT INTO Customer (customerId, customerName, ContactName, contactEmail, BillinAddreess)
VALUES
    (101, 'ABC Electronics', 'John Smith', 'john@abc-electronics.com', '123 Main Street'),
    (102, 'Tech Haven', 'Alice Johnson', 'alice@techhaven.com', '456 Elm Avenue'),
    (103, 'Gadget Galaxy', 'Michael Davis', 'michael@gadgetgalaxy.com', '789 Oak Drive'),
    (104, 'Digital Dreams', 'Sarah Brown', 'sarah@digitaldreams.com', '1010 Pine Road'),
    (105, 'Smart Shoppers', 'David Wilson', 'david@smartshoppers.com', '555 Cedar Lane'),
    (106, 'ElecEnthusiasts', 'Emily White', 'emily@elecenthusiasts.com', '777 Maple Street'),
    (107, 'Gizmo Gurus', 'Robert Lee', 'robert@gizmogurus.com', '909 Willow Way');
	select * from Customer;
	
	INSERT INTO orders (orderId, customerId, orderDate, TotalAmount)
VALUES (101, 101, '2023-10-03', 150.50),
       (102, 102, '2023-10-04', 200.75),
       (103, 103, '2023-10-05', 75.20),
	   (104,104,'2023-10-06',100.50),
	   (105,105,'2023-11-08',120.00),
	   (106,106,'2023-12-09',150.00);
	 select * from orders;
	 
	   INSERT INTO orderdetails (OrderDetailsId, OrderId, productId, Quantity, unitPrice, SubTotal)
VALUES
    (1, 101, 101, 5, 10.00, 50.00),
    (2, 101, 102, 3, 15.00, 45.00),
    (3, 102, 103, 2, 8.50, 17.00),
    (4, 102, 104, 4, 12.25, 49.00),
    (5, 103, 105, 7, 7.75, 54.25),
    (6, 103, 106, 1, 20.00, 20.00),
    (7, 104, 107, 6, 9.99, 59.94);
	select * from orderdetails;
	INSERT INTO Transactions (TransactionId, TransactionDate, ProductId, Quantity, TransactionType)
VALUES
    (1, '2023-10-01', 101, 5, 'Sale'),
    (2, '2023-10-02', 102, 3, 'Sale'),
    (3, '2023-10-03', 103, 2, 'Purchase'),
    (4, '2023-10-04', 104, 4, 'Sale'),
    (5, '2023-10-05', 105, 7, 'Purchase'),
    (6, '2023-10-06', 106, 1, 'Sale'),
    (7, '2023-10-07', 107, 6, 'Purchase');
	
	select * from Transactions;
	
----------------------------------------Queries----------------------------------------------

 --1)Retrieve the total sales for a specific customer:
 
SELECT SUM(OrderDetails.Subtotal) AS TotalSales FROM Orders INNER JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
WHERE Orders.CustomerID = 101;

--2)Calculate the total revenue generated by each product category:

SELECT Products.Category, SUM(OrderDetails.Subtotal) AS TotalRevenue FROM OrderDetails INNER JOIN Products ON OrderDetails.ProductID = Products.ProductID
GROUP BY Products.Category;

--3)Calculate the total inventory value for each product (price * quantity on hand):

SELECT Products.Product_name, Products.Price, Products.QuantityOnHand, Products.Price * Products.QuantityOnHand AS InventoryValue
FROM Products;

--4) List all products and their suppliers

SELECT Products.Product_name, Supplier.Supplier_name FROM Products INNER JOIN Supplier ON Products.SupplierID = Supplier.SupplierID;

--5)List the most recent orders, including product details and customer information:

SELECT Orders.OrderID, Orders.OrderDate, Products.Product_name, OrderDetails.Quantity, customer.CustomerName
FROM Orders INNER JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID INNER JOIN Products ON OrderDetails.ProductID = Products.ProductID INNER JOIN customer ON Orders.CustomerID = customer.CustomerID
ORDER BY Orders.OrderDate DESC LIMIT 10;

-----------------------------------functions-----------------------------------------------

--1)Calculate Total Sales Quantity By Category

CREATE OR REPLACE FUNCTION CalculateTotalSalesQuantityByCategory()
RETURNS INTEGER
LANGUAGE plpgsql
AS
$$
DECLARE
    TotalSalesQuantity INT;
BEGIN
    SELECT SUM(OrderDetails.Quantity) INTO TotalSalesQuantity
    FROM OrderDetails
    INNER JOIN Products ON OrderDetails.ProductID = Products.ProductID
    WHERE Products.Category = 'Mobile Devices';

    RETURN TotalSalesQuantity;
END;
$$
select CalculateTotalSalesQuantityByCategory();

--2)Calculate Total Order Revenue1

CREATE FUNCTION CalculateTotalOrderRevenue1(ID1 INT)
RETURNS DECIMAL(10, 2)as $$
DECLARE 
total DECIMAL(10, 2);
BEGIN
    
    SELECT SUM(Subtotal) INTO total
    FROM OrderDetails
    WHERE OrderID = ID1;
    RETURN total;
END ;
$$
language plpgsql;
select CalculateTotalOrderRevenue1(101);

--------------------------procedure----------------------------

--1) update price of product

CREATE or replace PROCEDURE UpdateProductPrice(
    IN productID1 INT,
    IN newPrice DECIMAL(10, 2)
)
language plpgsql
as
$$
BEGIN
    -- Update the product's price
    UPDATE Products
    SET Price = newPrice
    WHERE ProductID = productID1;
END;
$$
call UpdateProductPrice(107,899.99);
select * from products;

-------------------------------Triggers----------------------------

drop trigger pricechange on products;
create or replace function pricechange()returns trigger as $$
begin 
raise notice 'done done done';
return new;
end;
$$
language plpgsql;

create trigger pricechange1 after update on products for each row
execute procedure pricechange()